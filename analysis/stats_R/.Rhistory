library(tidyverse)
library(lme4)
library(texreg)
library(tidyverse)
library(lme4)
library(texreg)
# Save to use in next analysis
path_data_files = "/Users/garci061/pCloud Drive/projects/2018_rumor/info_transmission_networks/data/data_processing/"
### SIMILARITY WITH THE ORIGINAL STORY
## Read data
results <- read_delim(paste0(path_data_files,"analysis_similarity_transformers.csv"), show_col_types = FALSE)  |>
select(layer_n, rep, condition, jaccard_original_story) |>
rename(similarity_orig_story = jaccard_original_story)
results <- read_delim(paste0(path_data_files,"analysis_similarity_transformers.csv"), show_col_types = FALSE)  |>
select(layer_n, rep, condition, sim_original_story)
# No RE (AIC -1627)
formula3 = sim_original_story ~  condition:layer_n + layer_n
mod3 <- glm(formula3, data = results)
mod3$aic
#conditionNetwork:layer_n  0.017329   0.004387   3.951 8.45e-05 ***
confint(mod3, method="Wald") #0.01260623  0.02014244
# Random intercepts (AIC -1812)
formula2 = sim_original_story ~  condition:layer_n + layer_n + (1 + rep)
mod2 <- glm(formula2, data = results)
mod2$aic
confint(mod2, method="Wald") #0.009915929  0.0247422450
results <- read_delim(paste0(path_data_files,"analysis_similarity_ind_transformers.csv"), show_col_types = FALSE)
select(layer_n, k, condition, story_merged) |>
rename(similarity_within_story = story_merged)
results <- read_delim(paste0(path_data_files,"analysis_similarity_ind_transformers.csv"), show_col_types = FALSE)  |>
select(layer_n, k, condition, story_merged) |>
rename(similarity_within_story = story_merged)
# No RE (AIC -18552)
formula3b = similarity_within_story ~  condition:layer_n + layer_n
mod3b <- glm(formula3b, data = results)
mod3b$aic
#conditionNetwork:layer_n  0.017329   0.004387   3.951 8.45e-05 ***
ci <- confint(mod3b, method="Wald") #0.02926061  0.03184255
ci["conditionNetwork:layer_n", ]
# Robustneess (shouldn't be differents (AIC -18563)
formula2b = similarity_within_story ~  condition:layer_n + layer_n + (1 + k)
mod2b <- glm(formula2b, data = results)
mod2b$aic
ci <- confint(mod2b, method="Wald") #0.02789901 0.03078316
ci["conditionNetwork:layer_n", ]
renv::init()
renv::dependencies()
library(dplyr)
library(lme4)
library(texreg)
# Save to use in next analysis
path_data_files = "/Users/garci061/pCloud Drive/projects/2018_rumor/info_transmission_networks/data/data_processing/"
### SIMILARITY WITH THE ORIGINAL STORY
## Read data
results <- read_delim(paste0(path_data_files,"analysis_similarity_transformers.csv"), show_col_types = FALSE)  |>
select(layer_n, rep, condition, sim_original_story)
# No RE (AIC -1627)
formula3 = sim_original_story ~  condition:layer_n + layer_n
mod3 <- glm(formula3, data = results)
mod3$aic
#conditionNetwork:layer_n  0.017329   0.004387   3.951 8.45e-05 ***
confint(mod3, method="Wald") #0.01260623  0.02014244
# Random intercepts (AIC -1812)
formula2 = sim_original_story ~  condition:layer_n + layer_n + (1 + rep)
mod2 <- glm(formula2, data = results)
mod2$aic
confint(mod2, method="Wald") #0.009915929  0.0247422450
### SIMILARITY WITH THE ORIGINAL STORY
results <- read_delim(paste0(path_data_files,"analysis_similarity_ind_transformers.csv"), show_col_types = FALSE)  |>
select(layer_n, k, condition, story_merged) |>
rename(similarity_within_story = story_merged)
# No RE (AIC -18552)
formula3b = similarity_within_story ~  condition:layer_n + layer_n
mod3b <- glm(formula3b, data = results)
mod3b$aic
#conditionNetwork:layer_n  0.017329   0.004387   3.951 8.45e-05 ***
ci <- confint(mod3b, method="Wald") #0.02926061  0.03184255
ci["conditionNetwork:layer_n", ]
# Robustneess (shouldn't be differents (AIC -18563)
formula2b = similarity_within_story ~  condition:layer_n + layer_n + (1 + k)
mod2b <- glm(formula2b, data = results)
mod2b$aic
ci <- confint(mod2b, method="Wald") #0.02789901 0.03078316
ci["conditionNetwork:layer_n", ]
texreg(list(mod3, mod2, mod3b), digits = 3)
library(dplyr)
library(lme4)
library(texreg)
# Save to use in next analysis
path_data_files = "/Users/garci061/pCloud Drive/projects/2018_rumor/info_transmission_networks/data/"
path_figures = ".../results"
results <- read_delim(paste0(path_data_files,"data_processing/transmissions_word_level.csv"), delim = "\t", show_col_types = FALSE)
## Models of transmission
# No RE
formula3 = transmitted ~  number_stories_observed  + condition + log(number_words_read)
mod3 <- glm(formula3, data = results, family="binomial")
results
results <- read_delim(paste0(path_data_files,"data_processing/transmissions_word_level.csv"), delim = ",", show_col_types = FALSE)
results
# No RE
formula3 = transmitted ~  number_stories_observed  + condition + log(number_words_read)
mod3 <- glm(formula3, data = results, family="binomial")
summary(mod3)$AIC
summary(mod3)
mod3$aic
formula2 = transmitted ~  number_stories_observed  + condition + log(number_words_read)  + (1 | word)
mod2 <- glmer(formula2, data = results, family="binomial")
mod2$aic
summary(mod2)$AICtab
summary(mod1)$AICtab
summary(mod3)$AICtab
mod3$aic
# RAndom slopes and intercepts (AIC = 34033.09)
formula1 = transmitted ~  number_stories_observed   + condition + log(number_words_read)  + (1 + number_stories_observed|word)
mod1 <- glmer(formula1, data = results, family="binomial")
summary(mod1)
summary(mod1)$AICtab
confint(mod1, method = "Wald")
View(results)
# Save to use in next analysis
path_data_files = "/Users/garci061/pCloud Drive/projects/2018_rumor/info_transmission_networks/data/"
path_figures = ".../results"
results <- read_delim(paste0(path_data_files,"data_processing/transmissions_word_level.csv"), delim = ",", show_col_types = FALSE)
# No RE (AIC 22283.34)
formula3 = transmitted ~  number_stories_observed  + condition + log(number_words_read)
mod3 <- glm(formula3, data = results, family="binomial")
mod3$aic
# Random intercepts (AIC 21141.17)
formula2 = transmitted ~  number_stories_observed  + condition + log(number_words_read)  + (1 | word)
mod2 <- glmer(formula2, data = results, family="binomial")
summary(mod2)$AICtab
# RAndom slopes and intercepts (AIC = 20915.11)
formula1 = transmitted ~  number_stories_observed   + condition + log(number_words_read)  + (1 + number_stories_observed|word)
mod1 <- glmer(formula1, data = results, family="binomial")
summary(mod1)
summary(mod1)$AICtab
confint(mod1, method = "Wald")
# Create a LaTeX table for the model
texreg(list(mod1, mod2, mod3))
# Calculate baseline probabilities
predict_d <- results |>
mutate(pred = predict(mod1, type="response"))
select(word) |>
distinct() |>
mutate(number_stories_observed = 1,
number_words_read = 265,
condition = "Chain",
number_observed = 1)
predict_d <- predict_d |>
mutate(baseline_prob_3_word_265 = predict(mod1, newdata=predict_d, type="response"),
baseline_prob_3_word_100 = predict(mod1, newdata=mutate(predict_d, number_words_read=100), type="response"),
baseline_prob_3_word_30 = predict(mod1, newdata=mutate(predict_d, number_words_read=30), type="response"),
baseline_prob_2_word_100 = predict(mod1, newdata=mutate(predict_d, number_stories_observed=2/3, number_words_read=3*100, condition="Network"), type="response"),
baseline_prob_1_word_100 = predict(mod1, newdata=mutate(predict_d, number_stories_observed=1/3, number_words_read=3*100, condition="Network"), type="response"),
baseline_prob_2_word_30 = predict(mod1, newdata=mutate(predict_d, number_stories_observed=2/3, number_words_read=3*30, condition="Network"), type="response"),
baseline_prob_1_word_30 = predict(mod1, newdata=mutate(predict_d, number_stories_observed=1/3, number_words_read=3*30, condition="Network"), type="response")) |>
arrange(desc(baseline_prob_3_word_265))
write_delim(rownames_to_column(ranef(mod1)[[1]], var = "word"), paste0(path_data_files,"/data_final/word_random_effects.csv"), delim="\t")
write_delim(predict_d, paste0(path_data_files,"data_final/word_baseline_probs.csv"), delim="\t")
library(dplyr)
library(lme4)
library(texreg)
# Save to use in next analysis
path_data_files = "/Users/garci061/pCloud Drive/projects/2018_rumor/info_transmission_networks/data/data_processing/"
### SIMILARITY WITH THE ORIGINAL STORY
## Read data
results <- read_delim(paste0(path_data_files,"analysis_similarity_transformers.csv"), show_col_types = FALSE)  |>
select(layer_n, rep, condition, sim_original_story)
# No RE (AIC -1627)
formula3 = sim_original_story ~  condition:layer_n + layer_n
mod3 <- glm(formula3, data = results)
mod3$aic
#conditionNetwork:layer_n  0.017329   0.004387   3.951 8.45e-05 ***
confint(mod3, method="Wald") #0.01260623  0.02014244
# Random intercepts (AIC -1812)
formula2 = sim_original_story ~  condition:layer_n + layer_n + (1 + rep)
mod2 <- glm(formula2, data = results)
mod2$aic
confint(mod2, method="Wald") #0.009915929  0.0247422450
### SIMILARITY WITH THE ORIGINAL STORY
results <- read_delim(paste0(path_data_files,"analysis_similarity_ind_transformers.csv"), show_col_types = FALSE)  |>
select(layer_n, k, condition, story_merged) |>
rename(similarity_within_story = story_merged)
# No RE (AIC -18552)
formula3b = similarity_within_story ~  condition:layer_n + layer_n
mod3b <- glm(formula3b, data = results)
mod3b$aic
#conditionNetwork:layer_n  0.017329   0.004387   3.951 8.45e-05 ***
ci <- confint(mod3b, method="Wald") #0.02926061  0.03184255
ci["conditionNetwork:layer_n", ]
# Robustneess (shouldn't be differents (AIC -18563)
formula2b = similarity_within_story ~  condition:layer_n + layer_n + (1 + k)
mod2b <- glm(formula2b, data = results)
mod2b$aic
ci <- confint(mod2b, method="Wald") #0.02789901 0.03078316
ci["conditionNetwork:layer_n", ]
texreg(list(mod3, mod2, mod3b), digits = 3)
renv::init()
renv::prune()
renv::snapshot()
renv::prune()
renv::status()
